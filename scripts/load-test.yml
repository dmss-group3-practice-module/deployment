#### read ####
# test connect or start use phases warm up phase, or use all phases
# finish ingredient, marked ✅ means pass test.
# before start, make sure there are exactly data with the id you want to test.
# can use ./db-testdata.sql to init some data.
# $randomNumber(start, end) can adjust number to test
# update needing all fields and send object with post, worth improvement.
# it will return failure when update or delete data not in db table, which is normal.


config:
  target: http://localhost:8089
  http:
    timeout: 30
    retries: 2  # most twice when failed
    logLevel: info
  phases:
    - duration: 60     # test time
      arrivalRate: 0.5    # requests per sec
      rampTo: 2     # finially up to this requests/sec
      name: Warm up phase
    # - duration: 300 
    #   arrivalRate: 5
    #   rampTo: 20
    #   name: Ramp up load
    # - duration: 30
    #   arrivalRate: 10
    #   rampTo: 30
    #   name: Spike phase
  variables:
    name:
      - 'tomatoes'
      - 'onions'
      - 'chicken'
      - 'apple'
      - 'banana'
    password:
      - 'password1'
      - 'password2'
      - 'password3'
      - 'password4'
      - 'password5'
    email:
      - 'john.doe@example.com'
      - 'jane_smith@example.com'
      - 'mike_jones@example.com'
      - 'mark_brown@example.com'
      - 'sam_black@example.com'
    uom:
      - 'g'
      - 'kg'
    expiry_date:
      - '2023-10-15'
      - '2024-07-20'
      - '2025-09-01'
      - '2024-11-30'
      - '2025-12-31'

scenarios:
  # - name: "User CRUD"
  #   flow:
      # user login, height weight
      # - post:  
      #     url: "/login"
      #     weight: 5
      #     json:
      #       name: "{{ user_name }}"
      #       password: "{{ password }}"
 
      # # get all user, height weight
      # - get:
      #     url: "/user/getAll"
      #     weight: 5   
      # # ✅ 
 

      # get one user, height weight
      # - get:
      #     url: "/user/get/{{ $randomNumber(1, 10) }}"
      #     weight: 4    
      # # ✅

      # create user, medium weight
      # - post:
      #     url: "/user/update/add"
      #     weight: 3    
      #     json:
      #       name: "{{ name }}"
      #       password: "{{ password }}"
      #       email: "{{ email }}"

      # # update user, low weight
      # - post:
      #     url: "/user/update/{{ $randomNumber(1, 10) }}"
      #     weight: 2    
      #     json:
      #       display_name: "{{ name }}"
      #       status: "{{ number }}"

      # # delete user, low weight
      # - delete:
      #     url: "/user/delete/{{ $randomNumber(1, 5) }}"
      #     weight: 1   

  - name: "Ingredient CRUD"
    flow:
      # get all ingredient by user, height weight
      # - get:
      #     url: "/ingredient/getAll/{{ $randomNumber(1, 10) }}"
      #     weight: 5
      # # ✅

      # # get one ingredient, medium weight
      # - get:
      #     url: "/ingredient/get/{{ $randomNumber(1, 10) }}"
      #     weight: 3   
      # # ✅

      # add ingredient, medium weight
      # - post:
      #     url: "/ingredient/add"
      #     headers:
      #       Content-Type: "application/json"
      #     json:
      #       userId: "{{ $randomNumber(1, 5) }}"
      #       name: "{{ name }}"
      #       quantity: "{{ $randomNumber(1, 3) }}"
      #       uom: "{{ uom }}"
      #       expiryDate: "{{ expiry_date }}"
      #     weight: 3   
      # ✅

      # update ingredient, low weight
      - post:
          url: "/ingredient/update"
          json:
            id: "{{ $randomNumber(10, 15) }}"
            userId: "{{ $randomNumber(1, 5) }}"
            name: "{{ name }}"
            quantity: "{{ $randomNumber(1, 3) }}"
            uom: "{{ uom }}"
            expiryDate: "{{ expiry_date }}"
          weight: 2   
      # ✅

      # # delete ingredient, low weight
      # - delete:
      #     url: "/ingredient/delete/{{ $randomNumber(60, 90) }}"
      #     weight: 1   
      # # ✅

  # - name: "Recipe CRUD"
  #   flow:
  #     # get all recipe, height weight
  #     - get:
  #         url: "/recipe"
  #         weight: 5 

      # # get published recipe, height weight
      # - get:
      #     url: "/recipe/published"
      #     weight: 5   

      # # search recipe, height weight
      # - get:
      #     url: "/recipe/search?name={recipes.name}"
      #     weight: 5

      # # get recipe by user, height weight
      # - get:  
      #     url: "/recipe/creator/{{ $randomNumber(1, 10) }}"   
      #     weight: 5

      # # add recipe, medium weight
      # - get:  
      #     url: "/recipe/api/"
      #     weight: 3
      # update recipe, low weight

      # - put:
      #     url: "/recipe/{{ $randomNumber(1, 10) }}"
      #     json:
      #       image: "{{ recipes.image }}"
      #       description: "{{ recipes.description }}"
      #     weight: 2  
          
      # delete recipt, low weight
      # - delete:
      #     url: "/recipe/{{ $randomNumber(1, 5) }}"
      #     weight: 1   